name: Fixed-Version Environment Checker

on:
  push:
    branches:
    - master
    paths:
    - 'envs/environment.yaml'
  schedule:
  - cron: "0 5 * * 0"
  workflow_dispatch:


jobs:
  update-environment-fixed:
    name: Update pinned envs
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          suffix: "ubuntu"
        - os: macos-latest
          suffix: "macos"
        - os: windows-latest
          suffix: "windows"

    steps:
    - uses: actions/checkout@v4

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: ${{ github.event.repository.name }}
        environment-file: envs/environment.yaml

    - name: Update environment.fixed.yaml per OS
      run: |
        conda env export --name ${{ github.event.repository.name }} --no-builds > envs/${{ matrix.suffix }}-pinned.yaml

    - name: Add SPDX header
      if: ${{ matrix.suffix != 'windows' }}
      run: |
        SPDX_HEADER="# SPDX-FileCopyrightText: 2017-2024 The PyPSA-Eur Authors\n# SPDX-License-Identifier: CC0-1.0\n"
        echo -e "$SPDX_HEADER" | cat - envs/${{ matrix.suffix }}-pinned.yaml > temp && mv temp envs/${{ matrix.suffix }}-pinned.yaml

    - name: Add SPDX header (windows)
      if: ${{ matrix.suffix == 'windows' }}
      run: |
        $SPDX_HEADER = "# SPDX-FileCopyrightText: 2017-2024 The PyPSA-Eur Authors`n# SPDX-License-Identifier: CC0-1.0`n"
        $CurrentContent = Get-Content "envs/${{ matrix.suffix }}-pinned.yaml"
        $NewContent = $SPDX_HEADER + $CurrentContent
        $NewContent | Set-Content "envs/${{ matrix.suffix }}-pinned.yaml"

    - name: Cache environment files
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.suffix }}-pinned
        path: envs/${{ matrix.suffix }}-pinned.yaml

  create-pull-request:
    needs: update-environment-fixed
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Prepare files for commit
      run: |
        mkdir -p envs
        mv ubuntu-pinned/* envs/ubuntu-pinned.yaml
        mv macos-pinned/* envs/macos-pinned.yaml
        mv windows-pinned/* envs/windows-pinned.yaml

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: update-environment-fixed
        title: "[github-actions.ci] Update fixed environments"
        body: "Automatically generated PR to update pinned environment files for Windows, macOS, and Ubuntu."
        commit-message: "Update pinned environment files for all platforms"
